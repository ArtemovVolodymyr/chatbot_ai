# === cisco_api.py ===

# –Ü–º–ø–æ—Ä—Ç –±—ñ–±–ª—ñ–æ—Ç–µ–∫
from dotenv import load_dotenv  # –î–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∑ .env
import logging  # –î–ª—è –≤–µ–¥–µ–Ω–Ω—è –ª–æ–≥—ñ–≤

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö –∑ .env (–Ω–∞—Ä–∞–∑—ñ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è, –∞–ª–µ –∑–∞–ª–∏—à–µ–Ω–æ –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ)
load_dotenv()
logger = logging.getLogger(__name__)

# –ë–∞–∑–æ–≤–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Cisco, –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–µ –¥–ª—è –ø–æ—Å–∏–ª–∞–Ω—å —É –º–∞–π–±—É—Ç–Ω—å–æ–º—É
BASE_URL = "https://www.cisco.com/c/en/us/training-events/training-certifications/training/"

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—É—Ä—Å—ñ–≤ –∑–∞ —Ç–µ–º–æ—é (interest) —Ç–∞ —Ä—ñ–≤–Ω–µ–º —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ (level)
def get_courses(interest=None, level=None):
    # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ª–æ–∫–∞–ª—ñ–∑–æ–≤–∞–Ω–∏—Ö –Ω–∞–∑–≤ —Ä—ñ–≤–Ω—ñ–≤ –Ω–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫—ñ –Ω–∞–∑–≤–∏
    level_map = {
        "–ø–æ—á–∞—Ç–∫–æ–≤–∏–π": "Beginner",
        "—Å–µ—Ä–µ–¥–Ω—ñ–π": "Intermediate",
        "–ø—Ä–æ—Å—É–Ω—É—Ç–∏–π": "Advanced",
        "beginner": "Beginner",
        "intermediate": "Intermediate",
        "advanced": "Advanced"
    }

    # –Ø–∫—â–æ –≤–∫–∞–∑–∞–Ω–æ —Ä—ñ–≤–µ–Ω—å, –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –π–æ–≥–æ –¥–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç—É
    if level:
        level = level_map.get(level.lower(), level.capitalize())

    logger.info(f"–®—É–∫–∞—î–º–æ –∫—É—Ä—Å–∏ –∑ —Ç–µ–º–æ—é '{interest}' —Ç–∞ —Ä—ñ–≤–Ω–µ–º '{level}'")

    # –ï–º—É–ª—è—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∫—É—Ä—Å—ñ–≤ (–ª–æ–∫–∞–ª—å–Ω–∏–π —Å–ø–∏—Å–æ–∫)
    courses_db = [
        {"title": "Python Essentials", "description": "–í—Å—Ç—É–ø –¥–æ Python, –∑–º—ñ–Ω–Ω—ñ, —Ü–∏–∫–ª–∏, —É–º–æ–≤–∏, —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞ –æ–±‚Äô—î–∫—Ç–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è.", "level": "Beginner", "duration": "8 hours", "free": True, "mode": "Self-paced"},
        {"title": "Introduction to Cybersecurity", "description": "–û—Å–Ω–æ–≤–∏ –∫—ñ–±–µ—Ä–±–µ–∑–ø–µ–∫–∏, –∑–∞–≥—Ä–æ–∑–∏, –∞—Ç–∞–∫–∏, –∑–∞—Ö–∏—Å—Ç –¥–∞–Ω–∏—Ö.", "level": "Beginner", "duration": "6 hours", "free": True, "mode": "Self-paced"},
        {"title": "CCNA: Introduction to Networks", "description": "–û—Å–Ω–æ–≤–∏ –º–µ—Ä–µ–∂, IP-–∞–¥—Ä–µ—Å–∞—Ü—ñ—è, –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü—ñ—è, –º–æ–¥–µ–ª—ñ OSI —Ç–∞ TCP/IP.", "level": "Beginner", "duration": "40 hours", "free": True, "mode": "Self-paced"},
        {"title": "Cybersecurity Essentials", "description": "–ü–æ–≥–ª–∏–±–ª–µ–Ω–∏–π –∫—É—Ä—Å –∑ –±–µ–∑–ø–µ–∫–∏ –º–µ—Ä–µ–∂, –∑–∞–≥—Ä–æ–∑, –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ—ñ—ó.", "level": "Intermediate", "duration": "30 hours", "free": True, "mode": "Self-paced"},
        {"title": "DevNet Associate", "description": "–ü—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è –º–µ—Ä–µ–∂, API, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è –∑ Cisco DevNet.", "level": "Intermediate", "duration": "40 hours", "free": True, "mode": "Self-paced"},
        {"title": "Networking Essentials", "description": "–ö–æ–Ω—Ü–µ–ø—Ü—ñ—ó –º–µ—Ä–µ–∂, TCP/IP, –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä—ñ–≤ —Ç–∞ –∫–æ–º—É—Ç–∞—Ç–æ—Ä—ñ–≤.", "level": "Intermediate", "duration": "20 hours", "free": True, "mode": "Self-paced"},
        {"title": "CyberOps Associate", "description": "SOC-–æ–ø–µ—Ä–∞—Ü—ñ—ó, –≤–∏—è–≤–ª–µ–Ω–Ω—è –∑–∞–≥—Ä–æ–∑, —Ä–µ–∞–≥—É–≤–∞–Ω–Ω—è –Ω–∞ —ñ–Ω—Ü–∏–¥–µ–Ω—Ç–∏.", "level": "Advanced", "duration": "60 hours", "free": False, "mode": "Instructor-led"},
        {"title": "Network Security", "description": "–ó–∞—Ö–∏—Å—Ç –º–µ—Ä–µ–∂—ñ, –±—Ä–∞–Ω–¥–º–∞—É–µ—Ä–∏, VPN, –ø–æ–ª—ñ—Ç–∏–∫–∏ –±–µ–∑–ø–µ–∫–∏.", "level": "Advanced", "duration": "50 hours", "free": False, "mode": "Instructor-led"},
        {"title": "DevNet Automation", "description": "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π –º–µ—Ä–µ–∂ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Python —ñ REST API.", "level": "Advanced", "duration": "45 hours", "free": False, "mode": "Self-paced"},
        {"title": "IoT Fundamentals", "description": "–û—Å–Ω–æ–≤–∏ –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç—É —Ä–µ—á–µ–π, –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤, –±–µ–∑–ø–µ–∫–∞ IoT.", "level": "Beginner", "duration": "10 hours", "free": True, "mode": "Self-paced"}
    ]

    # –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –∫—É—Ä—Å—ñ–≤ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –≤–∫–∞–∑–∞–Ω–æ–≥–æ —ñ–Ω—Ç–µ—Ä–µ—Å—É —Ç–∞ —Ä—ñ–≤–Ω—è
    filtered = []
    interest_lower = interest.lower() if interest else None  # –ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä–µ—Å—É –¥–æ –Ω–∏–∂–Ω—å–æ–≥–æ —Ä–µ–≥—ñ—Å—Ç—Ä—É
    for course in courses_db:
        # –Ø–∫—â–æ –≤–∫–∞–∑–∞–Ω–æ —ñ–Ω—Ç–µ—Ä–µ—Å —ñ –≤—ñ–Ω –Ω–µ –≤—Ö–æ–¥–∏—Ç—å —É –Ω–∞–∑–≤—É –∞–±–æ –æ–ø–∏—Å ‚Äî –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ –∫—É—Ä—Å
        if interest_lower and interest_lower not in course["title"].lower() and interest_lower not in course["description"].lower():
            continue
        # –Ø–∫—â–æ –≤–∫–∞–∑–∞–Ω–æ —Ä—ñ–≤–µ–Ω—å —ñ –≤—ñ–Ω –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î ‚Äî –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏
        if level and course["level"] != level:
            continue
        # –Ø–∫—â–æ –∫—É—Ä—Å –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ñ—ñ–ª—å—Ç—Ä–∞–º ‚Äî –¥–æ–¥–∞—Ç–∏ –¥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
        filtered.append(course)

    logger.info(f"–ó–Ω–∞–π–¥–µ–Ω–æ –∫—É—Ä—Å—ñ–≤: {len(filtered)}")
    return filtered

# –§—É–Ω–∫—Ü—ñ—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –∫—É—Ä—Å—ñ–≤ —É —Ç–µ–∫—Å—Ç–æ–≤–∏–π –≤–∏–≥–ª—è–¥ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
def format_courses(courses, interest=None, level=None):
    if not courses:
        # –Ø–∫—â–æ –Ω–µ–º–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ ‚Äî –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        return f"üîç –ù–∞ –∂–∞–ª—å, –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫—É—Ä—Å—ñ–≤ –∑–∞ —Ç–µ–º–æ—é ¬´{interest}¬ª —Ç–∞ —Ä—ñ–≤–Ω–µ–º ¬´{level}¬ª."

    # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    result = f"üîç –û—Å—å –∫—É—Ä—Å–∏ –∑–∞ —Ç–µ–º–æ—é ¬´{interest}¬ª, —Ä—ñ–≤–µ–Ω—å: ¬´{level}¬ª:\n"

    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–ø–∏—Å—É –∫–æ–∂–Ω–æ–≥–æ –∫—É—Ä—Å—É –¥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
    for course in courses:
        result += (
            f"\nüìò {course['title']}\n"
            f"üìù {course['description']}\n"
            f"üìä {course['level']}\n"
            f"‚è±Ô∏è {course['duration']}\n"
            f"üí∞ {'–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π' if course['free'] else '–ü–ª–∞—Ç–Ω–∏–π'} | üßë‚Äçüè´ {course['mode']}\n"
        )
    return result.strip()
